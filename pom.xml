<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.reinard</groupId>
	<artifactId>learn-hanzi</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>learn-hanzi</name>
	<url>ssh://reinardhz@git.code.sf.net/p/learn-hanzi/git</url>
	<description>A project to help me learn Chinese characters at faster pace.</description>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Compatible with Jetty 9.3.17.v20170317 -->
		<!-- http://www.eclipse.org/jetty/documentation/9.3.17.v20170317/-->
		<jetty.version>9.3.17.RC0</jetty.version>
		<java.version>1.8</java.version>
		<jsp.version>2.3</jsp.version>
		<servlet.version>3.1</servlet.version>
		
		<!-- Compatible with java 1.8 -->
		<org.springframework-version>4.3.7.RELEASE</org.springframework-version>
		
		<!-- Compatible with spring 4.3.7.RELEASE -->
		<!-- Look the dependecy in maven: https://mvnrepository.com/artifact/org.springframework/spring-webmvc/4.3.7.RELEASE -->
		<!-- Look the dependecy in maven: https://mvnrepository.com/artifact/org.springframework/spring-orm/4.3.7.RELEASE -->
		<javax.servlet-api.version>3.0.1</javax.servlet-api.version>
		<jstl.version>1.2.1</jstl.version>
		<jsp-api>2.2.1</jsp-api>
    	<jackson-databind.version>2.8.7</jackson-databind.version>
    	<junit.version>4.12</junit.version>
    	<!-- hibernate 5.2.9.Final is an implementation of Java Persistance API 2.1 (Java EE 7) -->
		<hibernate.version>5.2.9.Final</hibernate.version>
		
		<log4j.version>1.2.17</log4j.version>
	</properties>


	<build>
		<finalName>learn-hanzi</finalName>
		<plugins>

			<plugin>
				<!-- http://www.eclipse.org/jetty/documentation/9.3.17.v20170317/jetty-maven-plugin.html -->
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<webApp>
      					<contextPath>/learn-hanzi</contextPath>
      					<descriptor>${project.basedir}/src/main/webapp/WEB-INF/web.xml</descriptor>
      					<!-- Source of .war file -->
    					<war>${project.basedir}/target/${project.build.finalName}.war</war>
    				</webApp>
				</configuration>
			</plugin>
			
			<!-- To copy file, Execute this plugin using command: mvn org.apache.maven.plugins:maven-antrun-plugin:1.7:run -->
			<!--
			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-antrun-plugin</artifactId>
    			<version>1.7</version>
                <configuration>
                   <target name="deploy to jboss server">
                       <copy file="${project.basedir}\target\learn-hanzi.war" toDir="E:\Program Files\EAP-6.2.0\jboss-eap-6.2\standalone\deployments" overwrite="true"/>
                    </target>
                 </configuration>                       
     		</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>true</failOnMissingWebXml>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- ====To use Spring ==== -->
		<!-- To use Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<!-- To let Spring run test class -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework-version}</version>
            <scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
		<dependency>
   			<groupId>javax.servlet</groupId>
    		<artifactId>javax.servlet-api</artifactId>
    		<version>${javax.servlet-api.version}</version>
		</dependency>
		<dependency>
    		<groupId>javax.servlet.jsp</groupId>
    		<artifactId>javax.servlet.jsp-api</artifactId>
    		<version>${jsp-api}</version>
		</dependency>
		<dependency>
    		<groupId>javax.servlet.jsp.jstl</groupId>
    		<artifactId>javax.servlet.jsp.jstl-api</artifactId>
    		<version>${jstl.version}</version>
		</dependency>
		<!-- To bind json http request with controller's method parameter (@RequestBody)-->
		<dependency>
    		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-databind</artifactId>
    		<version>${jackson-databind.version}</version>
		</dependency>
		<!-- ================================== -->
		
		
		<!-- ===Integrate Spring with Hibernate=== -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- lib to create connection to Database, including: "org.springframework.jdbc.datasource.DriverManagerDataSource" -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<!-- ================================== -->
		
		<!-- ===Integrate Spring with JUnit=== -->
		
		<dependency>
    		<groupId>junit</groupId>
   			<artifactId>junit</artifactId>
    		<version>${junit.version}</version>
		</dependency>
		<!-- ================================== -->
		
		<!-- To use Postgresql JDBC Driver -->
		<dependency>
    		<groupId>postgresql</groupId>
    		<artifactId>postgresql</artifactId>
    		<version>9.1-901-1.jdbc4</version>
		</dependency>
		
		<!-- To use log4j (logger) -->
		<!-- Please configure this, in file "src/main/resources/log4j.properties"-->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		
	</dependencies>

</project>
